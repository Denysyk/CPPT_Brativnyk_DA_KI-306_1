import sys

# Зчитуємо кількість рядків у квадратній матриці від користувача
rows_num = int(input("Введіть розмір квадратної матриці: "))

# Зчитуємо символ-заповнювач від користувача
filler = input("Введіть символ-заповнювач: ")

# Перевірка чи введений символ-заповнювач не порожній рядок
if len(filler) == 0:
    print("Не введено символ-заповнювач")
    sys.exit(1)

# Обчислюємо кількість підмасивів у зубчастому масиві
n_subarrays = (rows_num + 1) // 2
newline_count = (rows_num // 2) - 1  # Кількість переходів на нову стрічку
leading_spaces = 0  # Змінна для визначення кількості пробілів перед кожним рядком

# Ітеруємося через кожен підмасив та його елементи
for i in range(n_subarrays):
    # Додаємо пробіли перед кожним підмасивом
    for _ in range(leading_spaces):
        print(" ", end=" ")

    num_elements = rows_num - 2 * i  # Обчислюємо кількість елементів у поточному підмасиві
    arr = []
    # Заповнюємо підмасив символами-заповнювачами
    for _ in range(num_elements):
        if len(filler) == 1:
            arr.append(ord(filler))  # Конвертуємо символ у його ASCII код
            print(chr(arr[-1]), end=" ")  # Виводимо символ за його ASCII кодом
        else:
            print("Забагато символів-заповнювачів")
            sys.exit(1)

    print()  # Переводимо курсор на новий рядок для виводу наступного підмасиву
    leading_spaces += 1  # Збільшуємо кількість пробілів перед наступним підмасивом

# Додаємо переходи на нову стрічку в кінці виводу
for _ in range(newline_count):
    print()
